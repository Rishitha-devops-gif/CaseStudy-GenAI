{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport let ArtworkService = /*#__PURE__*/(() => {\n  class ArtworkService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = 'http://localhost:3000/api/artworks';\n    }\n    getHeaders() {\n      const token = this.authService.getToken();\n      return new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n    }\n    getArtworks(filters) {\n      let params = new HttpParams();\n      if (filters?.tags) {\n        params = params.set('tags', filters.tags);\n      }\n      return this.http.get(this.apiUrl, {\n        params\n      });\n    }\n    getArtwork(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    createArtwork(artwork) {\n      return this.http.post(this.apiUrl, artwork, {\n        headers: this.getHeaders()\n      });\n    }\n    updateArtwork(id, artwork) {\n      return this.http.put(`${this.apiUrl}/${id}`, artwork, {\n        headers: this.getHeaders()\n      });\n    }\n    deleteArtwork(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`, {\n        headers: this.getHeaders()\n      });\n    }\n    static {\n      this.ɵfac = function ArtworkService_Factory(t) {\n        return new (t || ArtworkService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ArtworkService,\n        factory: ArtworkService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ArtworkService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}