{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ArtworkListComponent = class ArtworkListComponent {\n  constructor(artworkService, authService, feedbackService) {\n    this.artworkService = artworkService;\n    this.authService = authService;\n    this.feedbackService = feedbackService;\n    this.artworks = [];\n    this.tagFilter = '';\n    this.showCreateForm = false;\n    this.currentUser = this.authService.getCurrentUser();\n    this.newArtwork = {\n      title: '',\n      description: '',\n      image_url: '',\n      tags: ''\n    };\n    this.selectedArtwork = null;\n    this.showViewModal = false;\n    this.showEditForm = false;\n    this.editArtworkData = {\n      title: '',\n      description: '',\n      image_url: '',\n      tags: ''\n    };\n    this.showFeedbackFor = null;\n    this.artworkFeedback = {};\n    this.newFeedback = {\n      rating: 5,\n      comment: ''\n    };\n  }\n  ngOnInit() {\n    this.loadArtworks();\n  }\n  loadArtworks() {\n    this.artworkService.getArtworks().subscribe({\n      next: artworks => this.artworks = artworks,\n      error: error => console.error('Error loading artworks:', error)\n    });\n  }\n  applyFilter() {\n    const filters = this.tagFilter ? {\n      tags: this.tagFilter\n    } : {};\n    this.artworkService.getArtworks(filters).subscribe({\n      next: artworks => this.artworks = artworks,\n      error: error => console.error('Error filtering artworks:', error)\n    });\n  }\n  clearFilter() {\n    this.tagFilter = '';\n    this.loadArtworks();\n  }\n  createArtwork() {\n    console.log('Creating artwork:', this.newArtwork);\n    this.artworkService.createArtwork(this.newArtwork).subscribe({\n      next: result => {\n        console.log('Artwork created successfully:', result);\n        this.loadArtworks();\n        this.showCreateForm = false;\n        this.newArtwork = {\n          title: '',\n          description: '',\n          image_url: '',\n          tags: ''\n        };\n        alert('Artwork created successfully!');\n      },\n      error: error => {\n        console.error('Error creating artwork:', error);\n        alert('Error creating artwork: ' + (error.error?.error || error.message));\n      }\n    });\n  }\n  canEdit(artwork) {\n    return this.currentUser?.id === artwork.artist_id;\n  }\n  viewArtwork(artwork) {\n    this.selectedArtwork = artwork;\n    this.showViewModal = true;\n  }\n  closeViewModal() {\n    this.showViewModal = false;\n    this.selectedArtwork = null;\n  }\n  editArtwork(artwork) {\n    this.selectedArtwork = artwork;\n    this.editArtworkData = {\n      title: artwork.title,\n      description: artwork.description,\n      image_url: artwork.image_url,\n      tags: artwork.tags\n    };\n    this.showEditForm = true;\n  }\n  updateArtwork() {\n    if (this.selectedArtwork) {\n      this.artworkService.updateArtwork(this.selectedArtwork.id, this.editArtworkData).subscribe({\n        next: () => {\n          this.loadArtworks();\n          this.showEditForm = false;\n          this.selectedArtwork = null;\n          alert('Artwork updated successfully!');\n        },\n        error: error => {\n          console.error('Error updating artwork:', error);\n          alert('Error updating artwork: ' + (error.error?.error || error.message));\n        }\n      });\n    }\n  }\n  cancelEdit() {\n    this.showEditForm = false;\n    this.selectedArtwork = null;\n  }\n  onImageError(event) {\n    const title = event.target.alt || 'Artwork';\n    event.target.src = `https://via.placeholder.com/400x280/f0f0f0/666666?text=${encodeURIComponent(title)}`;\n  }\n  toggleFeedback(artworkId) {\n    if (this.showFeedbackFor === artworkId) {\n      this.showFeedbackFor = null;\n    } else {\n      this.showFeedbackFor = artworkId;\n      this.loadFeedback(artworkId);\n    }\n  }\n  loadFeedback(artworkId) {\n    this.feedbackService.getFeedbackByArtwork(artworkId).subscribe({\n      next: feedback => {\n        this.artworkFeedback[artworkId] = feedback;\n      },\n      error: error => console.error('Error loading feedback:', error)\n    });\n  }\n  submitFeedback(artworkId) {\n    const feedbackData = {\n      artwork_id: artworkId,\n      comment: this.newFeedback.comment,\n      rating: this.newFeedback.rating\n    };\n    this.feedbackService.createFeedback(feedbackData).subscribe({\n      next: () => {\n        this.loadFeedback(artworkId);\n        this.newFeedback = {\n          rating: 5,\n          comment: ''\n        };\n        alert('Feedback submitted successfully!');\n      },\n      error: error => {\n        console.error('Error submitting feedback:', error);\n        alert('Error submitting feedback: ' + (error.error?.error || error.message));\n      }\n    });\n  }\n  deleteArtwork(id) {\n    if (confirm('Are you sure you want to delete this artwork?')) {\n      this.artworkService.deleteArtwork(id).subscribe({\n        next: () => {\n          this.loadArtworks();\n          alert('Artwork deleted successfully!');\n        },\n        error: error => {\n          console.error('Error deleting artwork:', error);\n          alert('Error deleting artwork: ' + (error.error?.error || error.message));\n        }\n      });\n    }\n  }\n};\nArtworkListComponent = __decorate([Component({\n  selector: 'app-artwork-list',\n  template: `\n    <div class=\"artwork-list-container\">\n      <h2>Digital Artworks</h2>\n      \n      <div class=\"filters\">\n        <input type=\"text\" [(ngModel)]=\"tagFilter\" placeholder=\"Filter by tags\" class=\"form-control\">\n        <button (click)=\"applyFilter()\" class=\"btn btn-secondary\">Filter</button>\n        <button (click)=\"clearFilter()\" class=\"btn btn-secondary\">Clear</button>\n      </div>\n      \n      <div *ngIf=\"currentUser?.role === 'artist'\" class=\"actions\">\n        <button (click)=\"showCreateForm = !showCreateForm\" class=\"btn btn-primary\">Add Artwork</button>\n      </div>\n      \n      <div *ngIf=\"showCreateForm\" class=\"create-form\">\n        <h3>Add New Artwork</h3>\n        <form (ngSubmit)=\"createArtwork()\">\n          <input type=\"text\" [(ngModel)]=\"newArtwork.title\" name=\"title\" placeholder=\"Title\" required class=\"form-control\">\n          <textarea [(ngModel)]=\"newArtwork.description\" name=\"description\" placeholder=\"Description\" required class=\"form-control\"></textarea>\n          <input type=\"url\" [(ngModel)]=\"newArtwork.image_url\" name=\"image_url\" placeholder=\"Image URL\" required class=\"form-control\">\n          <input type=\"text\" [(ngModel)]=\"newArtwork.tags\" name=\"tags\" placeholder=\"Tags (comma separated)\" class=\"form-control\">\n          <button type=\"submit\" class=\"btn btn-success\">Create</button>\n          <button type=\"button\" (click)=\"showCreateForm = false\" class=\"btn btn-secondary\">Cancel</button>\n        </form>\n      </div>\n      \n      <div class=\"artwork-grid\">\n        <div *ngFor=\"let artwork of artworks\" class=\"artwork-card\">\n          <div class=\"image-container\">\n            <img [src]=\"artwork.image_url || 'https://via.placeholder.com/400x280/e8e8e8/666666?text=' + artwork.title\" \n                 [alt]=\"artwork.title\" \n                 class=\"artwork-image\" \n                 (error)=\"onImageError($event)\">\n          </div>\n          <div class=\"artwork-info\">\n            <h3>{{ artwork.title }}</h3>\n          <p>{{ artwork.description }}</p>\n          <p><strong>Artist:</strong> {{ artwork.artist_name }}</p>\n          <p><strong>Tags:</strong> {{ artwork.tags }}</p>\n          <div class=\"actions\">\n            <button (click)=\"viewArtwork(artwork)\" class=\"btn btn-info\">View Details</button>\n            <button (click)=\"editArtwork(artwork)\" class=\"btn btn-warning\">Edit</button>\n            <button (click)=\"deleteArtwork(artwork.id)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"toggleFeedback(artwork.id)\" class=\"btn btn-success\">Feedback</button>\n          </div>\n          \n          <!-- Feedback Section -->\n          <div *ngIf=\"showFeedbackFor === artwork.id\" class=\"feedback-section\">\n            <h4>Feedback & Reviews</h4>\n            \n            <!-- Existing Feedback -->\n            <div *ngFor=\"let feedback of artworkFeedback[artwork.id]\" class=\"feedback-item\">\n              <div class=\"feedback-header\">\n                <strong>{{ feedback.curator_name }}</strong>\n                <span class=\"rating\">{{ '★'.repeat(feedback.rating) }}{{ '☆'.repeat(5-feedback.rating) }}</span>\n              </div>\n              <p>{{ feedback.comment }}</p>\n              <small>{{ feedback.created_at | date:'short' }}</small>\n            </div>\n            \n            <!-- Add Feedback Form (Curators only) -->\n            <div *ngIf=\"currentUser?.role === 'curator'\" class=\"add-feedback\">\n              <h5>Add Your Feedback</h5>\n              <form (ngSubmit)=\"submitFeedback(artwork.id)\">\n                <div class=\"rating-input\">\n                  <label>Rating:</label>\n                  <select [(ngModel)]=\"newFeedback.rating\" name=\"rating\" required class=\"form-control\">\n                    <option value=\"1\">1 ★</option>\n                    <option value=\"2\">2 ★★</option>\n                    <option value=\"3\">3 ★★★</option>\n                    <option value=\"4\">4 ★★★★</option>\n                    <option value=\"5\">5 ★★★★★</option>\n                  </select>\n                </div>\n                <textarea [(ngModel)]=\"newFeedback.comment\" name=\"comment\" placeholder=\"Your feedback...\" required class=\"form-control\"></textarea>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit Feedback</button>\n              </form>\n            </div>\n          </div>\n          </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- View Details Modal -->\n      <div *ngIf=\"showViewModal && selectedArtwork\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h3>{{ selectedArtwork.title }}</h3>\n          <img [src]=\"selectedArtwork.image_url\" [alt]=\"selectedArtwork.title\" class=\"modal-image\">\n          <p><strong>Description:</strong> {{ selectedArtwork.description }}</p>\n          <p><strong>Artist:</strong> {{ selectedArtwork.artist_name }}</p>\n          <p><strong>Tags:</strong> {{ selectedArtwork.tags }}</p>\n          <p><strong>Created:</strong> {{ selectedArtwork.created_at | date }}</p>\n          <button (click)=\"closeViewModal()\" class=\"btn btn-secondary\">Close</button>\n        </div>\n      </div>\n      \n      <!-- Edit Form -->\n      <div *ngIf=\"showEditForm && selectedArtwork\" class=\"edit-form\">\n        <h3>Edit Artwork</h3>\n        <form (ngSubmit)=\"updateArtwork()\">\n          <input type=\"text\" [(ngModel)]=\"editArtworkData.title\" name=\"editTitle\" placeholder=\"Title\" required class=\"form-control\">\n          <textarea [(ngModel)]=\"editArtworkData.description\" name=\"editDescription\" placeholder=\"Description\" required class=\"form-control\"></textarea>\n          <input type=\"url\" [(ngModel)]=\"editArtworkData.image_url\" name=\"editImageUrl\" placeholder=\"Image URL\" required class=\"form-control\">\n          <input type=\"text\" [(ngModel)]=\"editArtworkData.tags\" name=\"editTags\" placeholder=\"Tags (comma separated)\" class=\"form-control\">\n          <button type=\"submit\" class=\"btn btn-success\">Update</button>\n          <button type=\"button\" (click)=\"cancelEdit()\" class=\"btn btn-secondary\">Cancel</button>\n        </form>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .artwork-list-container { padding: 20px; }\n    .filters { margin: 20px 0; display: flex; gap: 10px; }\n    .form-control { padding: 8px; margin: 5px 0; }\n    .btn { padding: 8px 16px; margin: 5px; cursor: pointer; border: none; }\n    .btn-primary { background: #007bff; color: white; }\n    .btn-secondary { background: #6c757d; color: white; }\n    .btn-success { background: #28a745; color: white; }\n    .btn-warning { background: #ffc107; color: black; }\n    .btn-danger { background: #dc3545; color: white; }\n    .btn-info { background: #17a2b8; color: white; }\n    .artwork-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 20px; margin-top: 20px; }\n    .artwork-card { border: 1px solid #ddd; padding: 15px; border-radius: 8px; }\n    .artwork-card { border: 1px solid #ddd; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); background: white; transition: transform 0.2s, box-shadow 0.2s; }\n    .artwork-card:hover { transform: translateY(-2px); box-shadow: 0 8px 20px rgba(0,0,0,0.15); }\n    .image-container { width: 100%; height: 280px; overflow: hidden; background: #f5f5f5; display: flex; align-items: center; justify-content: center; }\n    .artwork-image { width: 100%; height: 100%; object-fit: cover; transition: transform 0.3s ease; }\n    .artwork-image:hover { transform: scale(1.05); }\n    .artwork-info { padding: 20px; }\n    .artwork-info h3 { margin: 0 0 10px 0; color: #333; font-size: 1.2em; }\n    .artwork-info p { margin: 5px 0; color: #666; line-height: 1.4; }\n    .create-form { background: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; }\n    .create-form input, .create-form textarea { width: 100%; margin: 5px 0; }\n    .modal { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: flex; justify-content: center; align-items: center; z-index: 1000; }\n    .modal-content { background: white; padding: 30px; border-radius: 8px; max-width: 600px; max-height: 80vh; overflow-y: auto; }\n    .modal-image { width: 100%; max-height: 300px; object-fit: cover; margin: 10px 0; }\n    .edit-form { background: #fff3cd; padding: 20px; margin: 20px 0; border-radius: 8px; border: 1px solid #ffeaa7; }\n    .edit-form input, .edit-form textarea { width: 100%; margin: 5px 0; }\n    .feedback-section { background: #f8f9fa; padding: 15px; margin-top: 15px; border-radius: 8px; border-top: 3px solid #28a745; }\n    .feedback-item { background: white; padding: 12px; margin: 10px 0; border-radius: 6px; border-left: 4px solid #17a2b8; }\n    .feedback-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; }\n    .rating { color: #ffc107; font-size: 1.1em; }\n    .add-feedback { background: #e7f3ff; padding: 15px; margin-top: 15px; border-radius: 6px; }\n    .rating-input { margin: 10px 0; }\n    .rating-input select { width: auto; display: inline-block; margin-left: 10px; }\n    .add-feedback textarea { width: 100%; height: 80px; margin: 10px 0; }\n    .btn-success { background: #28a745; color: white; }\n  `]\n})], ArtworkListComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}